# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /nation/happenings/           @controllers.HappeningsController.nationHappenings(nation: String ?= "", start: Integer ?= 0)
POST    /region/parseHappenings/      @controllers.HappeningsController.parseHappenings()
GET     /region/happenings/           @controllers.HappeningsController.regionHappenings(region: String ?= "", start: Integer ?= 0)
GET     /flag/                        @controllers.FlagController.flag(nation: String ?= "")
GET     /regionflag/                  @controllers.FlagController.regionFlag(region: String ?= "")
POST    /firebase/                    @controllers.FirebaseAuthenticator.requestAuthentication()

GET     /rmb/comments/exist           @controllers.RMBController.hasComments(rmbPost: Integer ?= -1)
GET     /rmb/comments/                @controllers.RMBController.getComments(rmbPost: Integer ?= -1)
POST    /rmb/comments/flag            @controllers.RMBController.flagComment(commentId: Integer ?= -1, flag: Boolean ?= false)
POST    /rmb/comments/like            @controllers.RMBController.likeComment(commentId: Integer ?= -1, like: Boolean ?= false)
POST    /rmb/comments/add             @controllers.RMBController.addComment(rmbPost: Integer ?= -1)
POST    /rmb/rate/set/                @controllers.RMBController.ratePost(rmbPost: Integer ?= -1, rating: Integer ?= -1)
GET     /rmb/rate/get/                @controllers.RMBController.getPostRatings(rmbPost: Integer ?= -1)

GET    /flag/nation/                  @controllers.FlagController.redirectToNationFlag(nation: String ?= "")
GET    /flag/region/                  @controllers.FlagController.redirectToRegionFlag(region: String ?= "")

GET     /newspaper/details/           @controllers.NewspaperController.getNewspaperDetails(id: Integer ?= 0)
GET     /newspaper/latest/            @controllers.NewspaperController.getLatestUpdate(id: Integer ?= 0)
GET     /newspaper/region/            @controllers.NewspaperController.findNewspaper(region: String ?= "")
GET     /newspaper/lookup/            @controllers.NewspaperController.getNewspaper(id: Integer ?= -1, visible: Integer ?= 1, hideBody: Boolean ?= false, lookupArticleId: Integer ?= -1)
POST    /newspaper/editors/           @controllers.NewspaperController.changeEditors(newspaper: Integer ?= 0)
POST    /newspaper/canedit/           @controllers.NewspaperController.canEdit(newspaper: Integer ?= 0)
POST    /newspaper/submit/            @controllers.NewspaperController.submitArticle(newspaper: Integer ?= 0, articleId: Integer ?= -1)
POST    /newspaper/administrate/      @controllers.NewspaperController.administrateNewspaper(newspaper: Integer ?= 0)
POST    /newspaper/found/             @controllers.NewspaperController.foundNewspaper(region: String ?= "")
POST    /newspaper/disband/           @controllers.NewspaperController.disbandNewspaper(region: String ?= "")
GET     /newspaper/recent/            @controllers.NewspaperController.getLatestArticles(start: Integer ?= 0)

GET     /autocomplete/nation/         @controllers.AutocompleteController.autocompleteNation(start: String ?= "")
GET     /nation/title/                @controllers.AutocompleteController.getFullName(name: String ?= "")

GET     /nation/latest_update/        @controllers.NationController.getLastSettingsUpdate(name: String ?= "")
GET     /nation/settings/             @controllers.NationController.retrieveSettings(name: String ?= "")
POST    /nation/settings/             @controllers.NationController.updateSettings()

POST    /nation/data/get/             @controllers.NationController.retrieveData()
POST    /nation/data/set/             @controllers.NationController.updateData()
GET     /nation/data/                 @controllers.NationController.getLastDataUpdate(name: String ?= "")

GET     /nation/endorsements/         @controllers.WorldAssemblyController.getEndorsements(name: String ?= "")
GET     /nation/unreturnedendo/       @controllers.WorldAssemblyController.getUnreturnedEndorsements(name: String ?= "")
GET     /nation/missingendo/          @controllers.WorldAssemblyController.getMissingEndorsements(name: String ?= "")

GET    /region/wa/                    @controllers.WorldAssemblyController.getWAMembers(region: String ?= "")
GET    /region/population/            @controllers.RegionController.getPopulationTrends(region: String ?= "")
GET    /region/updatetime/            @controllers.RegionController.getUpdateTime(region: String ?= "")
GET    /region/nations/               @controllers.RegionController.getNations(region: String ?= "", xml: Boolean ?= false)

POST    /region/recruitment/get       @controllers.RecruitmentController.getRecruitmentStrategies(region: String ?= "")
POST    /region/recruitment/set       @controllers.RecruitmentController.updateRecruitmentStrategies(region: String ?= "")
POST    /region/recruitment/success   @controllers.RecruitmentController.getRecruitmentSuccess(tgid: String ?= "", region: String ?= "")

GET    /admin/happenings/             @controllers.AdminController.recalculateHappenings(code: String ?= "", happeningType: Integer ?= -1)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)
