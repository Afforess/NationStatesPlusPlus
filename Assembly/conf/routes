# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /happenings/                  @controllers.HappeningsController.happenings(nation: String ?= "", global: Boolean ?= false, excludeNewest: Boolean ?= false, start: Integer ?= 0, limit: Integer ?= 0)
POST    /region/parseHappenings/      @controllers.HappeningsController.parseHappenings()
POST    /region/updateFlag/           @controllers.Application.sendFlagUpdate()
GET     /region/happenings/           @controllers.HappeningsController.retrieveHappenings(region: String ?= "", start: Integer ?= 0)
GET     /endorsements/                @controllers.Application.getEndorsements(nation: String ?= "")
GET     /wa/                          @controllers.Application.getWAMembers()
GET     /nationhistory/               @controllers.Application.getNationHistory(nation: String ?= "")
GET     /recentactivity/              @controllers.RecentActivity.getRecentActivity(refresh: Boolean ?= false)
GET     /flag/                        @controllers.Application.flag(nation: String ?= "")
GET     /regionflag/                  @controllers.Application.regionFlag(region: String ?= "")
GET     /nation/livefeed/             @controllers.LiveHappeningsController.getLiveFeed()
GET     /nation/updateStatus/         @controllers.LiveHappeningsController.getUpdateStatus()
POST    /firebase/                    @controllers.FirebaseAuthenticator.requestAuthentication()
POST    /googledoc/                   @controllers.GoogleDocumentController.getGoogleDocument()

GET     /rmb/comments/exist           @controllers.RMBCommentController.hasComments(rmbPost: Integer ?= -1)
GET     /rmb/comments/                @controllers.RMBCommentController.getComments(rmbPost: Integer ?= -1)
POST    /rmb/comments/flag            @controllers.RMBCommentController.flagComment(commentId: Integer ?= -1, flag: Boolean ?= false)
POST    /rmb/comments/like            @controllers.RMBCommentController.likeComment(commentId: Integer ?= -1, like: Boolean ?= false)
POST    /rmb/comments/add             @controllers.RMBCommentController.addComment(rmbPost: Integer ?= -1)

GET    /flag/nation/                  @controllers.Application.redirectToNationFlag(nation: String ?= "")
GET    /flag/region/                  @controllers.Application.redirectToRegionFlag(region: String ?= "")

GET     /newspaper/details/           @controllers.NewspaperController.getNewspaperDetails(id: Integer ?= 0)
GET     /newspaper/latest/            @controllers.NewspaperController.getLatestUpdate(id: Integer ?= 0)
GET     /newspaper/region/            @controllers.NewspaperController.findNewspaper(region: String ?= "")
GET     /newspaper/lookup/            @controllers.NewspaperController.getNewspaper(id: Integer ?= -1, visible: Boolean ?= true)
POST    /newspaper/editors/           @controllers.NewspaperController.changeEditors(newspaper: Integer ?= 0)
POST    /newspaper/canedit/           @controllers.NewspaperController.canEdit(newspaper: Integer ?= 0)
POST    /newspaper/submit/            @controllers.NewspaperController.submitArticle(newspaper: Integer ?= 0, articleId: Integer ?= -1)
POST    /newspaper/administrate/      @controllers.NewspaperController.administrateNewspaper(newspaper: Integer ?= 0)

GET     /autocomplete/nation/         @controllers.AutocompleteController.autocompleteNation(start: String ?= "")



# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)
